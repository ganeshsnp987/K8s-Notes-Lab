Taints are applied on Node:
kubectl taint nodes <node_name> <key>=<value>:<taint_effect>
	

Remove the taint effect from the node that was previously tainted.
kubectl taint nodes <node_name> <key>=<value>:<taint_effect>-
kubectl taint nodes node01 run=mypod:NoSchedule-

Question 1: Taint a node with the Noschedule taint effect and set the key-value pair to run: mypod.

Solution: Use the following command to apply the taint to the desired node:
          kubectl taint nodes <node_name> run=mypod:NoSchedule


Question 2: Create a pod named "test" and check the node on which it is scheduled.

Solution: Use the following command to create the pod and view its scheduled node:
kubectl run testpod1 --image=nginx --restart=Never 
kubectl get pod test -o wide

Question 3: Create a pod and add a toleration to it with the following specifications:

Key: key1
Operator: Equal
Value: value1
Effect: Noschedule
Solution: Use the following YAML definition to create the pod with the toleration:
kubectl run testpod2 --image=nginx --restart=Never --dry-run -o yaml > tolpod.yaml
ls

vi tolpod.yaml

kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: testpod2
  name: testpod2
spec:
  tolerations:   // add toleration here with given key=value:taint_effect
  - key: key1
    operator: Equal
    value: value1
    effect: NoSchedule
  containers:
  - image: nginx
    name: testpod2
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
:wq
kubectl apply tolpod.yaml
kubectl get pods -o wide

Question 4: Remove the taint effect from the node that was previously tainted.

kubectl taint nodes <node_name> run=mypod:NoSchedule-