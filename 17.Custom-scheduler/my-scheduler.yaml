apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: my-scheduler
    tier: control-plane
  name: my-scheduler
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-scheduler
    - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
    - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
    - --bind-address=127.0.0.1
    - --kubeconfig=/etc/kubernetes/scheduler.conf
    - --leader-elect=false
    - --scheduler-name=my-scheduler
    - --port=10282
    - --secure-port=0
    image: registry.k8s.io/kube-scheduler:v1.17.3
    imagePullPolicy: IfNotPresent
    # livenessProbe:
    #   failureThreshold: 8
    #   httpGet:
    #     host: 127.0.0.1
    #     path: /healthz
    #     port: 10282
    #     scheme: HTTPS
    #   initialDelaySeconds: 10
    #   periodSeconds: 10
    #   timeoutSeconds: 15
    name: kube-scheduler
    resources:
      requests:
        cpu: 100m
    # startupProbe:
    #   failureThreshold: 24
    #   httpGet:
    #     host: 127.0.0.1
    #     path: /healthz
    #     port: 10282
    #     scheme: HTTPS
    #   initialDelaySeconds: 10
    #   periodSeconds: 10
    #   timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/kubernetes/scheduler.conf
      name: kubeconfig
      readOnly: true
  hostNetwork: true
  priority: 2000001000
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /etc/kubernetes/scheduler.conf
      type: FileOrCreate
    name: kubeconfig
status: {}


# minikube ssh
# my-scheduler.yaml
# cd my-scheduler.yaml /etc/kubernetes/manifests/my-scheduler.yaml
# exit
# kubectl get all
